<Activity mc:Ignorable="sap sap2010" x:Class="Key_Refunds_Details" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_IntDefaultDelay" Type="InArgument(x:Int32)" />
    <x:Property Name="in_IntDefaultTimeout" Type="InArgument(x:Int32)" />
    <x:Property Name="in_StrActorAccount" Type="InArgument(x:String)" />
    <x:Property Name="in_StrRefundReason" Type="InArgument(x:String)" />
    <x:Property Name="in_StrPaymentMethod" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>932,5901</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Key Refunds Details : Enter all refunds details" DisplayName="Key Refunds Details" sap:VirtualizedContainerService.HintSize="912,5801" sap2010:WorkflowViewState.IdRef="Sequence_6">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="Key Refunds Details" Name="strComponentName" />
      <Variable x:TypeArguments="x:String" Name="strRefundToValue" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="uiElements" />
      <Variable x:TypeArguments="ui:UiElement" Name="uiAttributeValue" />
      <Variable x:TypeArguments="x:String" Name="strOverpaidValue" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="870,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[String.Format(&quot;Started Component: {0}&quot;, strComponentName)]" />
    <Sequence sap2010:Annotation.AnnotationText="Checking All Incoming Arguments" DisplayName="Incoming Argument Check" sap:VirtualizedContainerService.HintSize="870,1478" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[in_IntDefaultDelay&gt;0]" DisplayName="If (in_IntDefaultDelay&gt;0)" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Incoming Argument Check Successful. in_IntDefaultDelay Value Is Greater Than 0&quot;]" />
        </If.Then>
        <If.Else>
          <Throw Exception="[new Exception(&quot;Incoming Argument Check Failed. in_IntDefaultDelay Value Is Not Greater Than 0&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
        </If.Else>
      </If>
      <If Condition="[in_IntDefaultTimeout&gt;0]" DisplayName="If (in_IntDefaultTimeout&gt;0)" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_2">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;Incoming Argument Check Successful. in_IntDefaultTimeout Value Is Greater Than 0&quot;]" />
        </If.Then>
        <If.Else>
          <Throw Exception="[new Exception(&quot;Incoming Argument Check Failed. in_IntDefaultTimeout Value Is Not Greater Than 0&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
        </If.Else>
      </If>
      <If Condition="[String.IsNullOrEmpty(in_StrActorAccount)]" DisplayName="If (String.IsNullOrEmpty(in_StrActorAccount))" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_9">
        <If.Then>
          <Throw Exception="[new Exception(&quot;Incoming Argument Check Failed. in_StrActorAccount Value Is Null or Empty.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
        </If.Then>
        <If.Else>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Trace" Message="[&quot;Incoming Argument Check Successful. in_StrActorAccount Value Is Not Empty.&quot;]" />
        </If.Else>
      </If>
      <If Condition="[String.IsNullOrEmpty(in_StrRefundReason)]" DisplayName="If (String.IsNullOrEmpty(in_StrReason))" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_10">
        <If.Then>
          <Throw Exception="[new Exception(&quot;Incoming Argument Check Failed. in_StrReason Value Is Null or Empty.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_6" />
        </If.Then>
        <If.Else>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Trace" Message="[&quot;Incoming Argument Check Successful. in_StrReason Value Is Not Empty.&quot;]" />
        </If.Else>
      </If>
      <If Condition="[String.IsNullOrEmpty(in_StrPaymentMethod)]" DisplayName="If (String.IsNullOrEmpty(in_StrMethod))" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_11">
        <If.Then>
          <Throw Exception="[new Exception(&quot;Incoming Argument Check Failed. in_StrMethod Value Is Null or Empty.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_7" />
        </If.Then>
        <If.Else>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Trace" Message="[&quot;Incoming Argument Check Successful. in_StrMethod Value Is Not Empty.&quot;]" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Pre-condition Check" DisplayName="Pre-Condition Check" sap:VirtualizedContainerService.HintSize="870,470" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="boolPreConditionCheck" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:UiElementExists DisplayName="Element Exists 'Refunds Heading'" Exists="[boolPreConditionCheck]" sap:VirtualizedContainerService.HintSize="579,68" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
        <ui:UiElementExists.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' /&gt;&lt;webctrl tag='H3' aaname='Refunds' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
            <ui:Target.WaitForReady>
              <InArgument x:TypeArguments="ui:WaitForReady" />
            </ui:Target.WaitForReady>
          </ui:Target>
        </ui:UiElementExists.Target>
      </ui:UiElementExists>
      <If Condition="[boolPreConditionCheck]" DisplayName="If (boolPreConditionCheck)" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_3">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[&quot;Pre Condition Check Successful. Refunds Heading Exist.&quot;]" />
        </If.Then>
        <If.Else>
          <Throw Exception="[New Exception(&quot;Pre Condition Check Failed. Refunds Heading Does Not Exist.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Enter all refunds details" DisplayName="Do Work" sap:VirtualizedContainerService.HintSize="870,2613" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Select Refund To value based of Positive refund amount" DisplayName="Select Refund To value based of Positive refund amount" sap:VirtualizedContainerService.HintSize="828,2082" sap2010:WorkflowViewState.IdRef="Sequence_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:FindChildren Children="[uiElements]" DisplayName="Find Children 'Get All List of Elements from Refund To'" Filter="&lt;webctrl /&gt;" sap:VirtualizedContainerService.HintSize="786,68" sap2010:WorkflowViewState.IdRef="FindChildren_1" Scope="FIND_CHILDREN">
          <ui:FindChildren.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' /&gt;&lt;webctrl id='refundTo*' tag='SELECT' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:FindChildren.Target>
        </ui:FindChildren>
        <ui:ForEach x:TypeArguments="ui:UiElement" CurrentIndex="{x:Null}" DisplayName="For Each Child UiElements from Refund To Dropdown" sap:VirtualizedContainerService.HintSize="786,434" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[uiElements]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="ui:UiElement">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:UiElement" Name="item" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,300" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[item.Get(&quot;aaname&quot;).ToString.Contains(&quot;Customer&quot;)]" DisplayName="If (item.Get(&quot;aaname&quot;).ToString.Contains(&quot;Customer&quot;))" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_5">
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strRefundToValue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[item.Get("aaname").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
        <ui:SelectItem ContinueOnError="{x:Null}" DelayAfter="[in_IntDefaultDelay]" DelayBefore="[in_IntDefaultDelay]" DisplayName="Select Item 'Select Refund To value'" sap:VirtualizedContainerService.HintSize="786,96" sap2010:WorkflowViewState.IdRef="SelectItem_1" Item="[strRefundToValue]">
          <ui:SelectItem.Items>
            <scg:List x:TypeArguments="x:String" Capacity="8">
              <x:String>Contributor - Nissan Motors (GB) Ltd</x:String>
              <x:String>Dealer - Nissan London West</x:String>
              <x:String>Salesman - Qadafi</x:String>
              <x:String>Customer - Sharma</x:String>
              <x:String>Contributor - Sharma</x:String>
              <x:String>3rd Party - Sharma</x:String>
            </scg:List>
          </ui:SelectItem.Items>
          <ui:SelectItem.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' /&gt;&#xA;&lt;webctrl id='refundTo*' tag='SELECT' /&gt;&#xA;" TimeoutMS="[in_IntDefaultTimeout]">
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:SelectItem.Target>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:SelectItem>
        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'Overpaid Value'" sap:VirtualizedContainerService.HintSize="786,68" sap2010:WorkflowViewState.IdRef="GetValue_1">
          <ui:GetValue.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' /&gt;&lt;webctrl id='overpaid*' tag='INPUT' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:GetValue.Target>
          <ui:GetValue.Value>
            <OutArgument x:TypeArguments="x:String">[strOverpaidValue]</OutArgument>
          </ui:GetValue.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:GetValue>
        <Assign sap:VirtualizedContainerService.HintSize="786,60" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strOverpaidValue]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[strOverpaidValue.Trim.Substring(1).Trim]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[double.Parse(strOverpaidValue) &gt; 0]" DisplayName="If (double.Parse(strOverpaidValue) &gt; 0)" sap:VirtualizedContainerService.HintSize="786,1033" sap2010:WorkflowViewState.IdRef="If_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Else>
            <Sequence DisplayName="Overpaid Amout is less than or equal to 0.00 for Other Payer" sap:VirtualizedContainerService.HintSize="641,885" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="599,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Trace" Message="[&quot;Overpaid Amount Is Less Than Or Equal To 0.00 Under Customer Name.&quot;]" />
              <ui:ForEach x:TypeArguments="ui:UiElement" CurrentIndex="{x:Null}" DisplayName="For Each Child UiElements from Refund To Dropdown" sap:VirtualizedContainerService.HintSize="599,662" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[uiElements]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="ui:UiElement">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:UiElement" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="563,528" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[item.Get(&quot;aaname&quot;).ToString.Contains(&quot;Other&quot;)]" DisplayName="If (item.Get(&quot;aaname&quot;).ToString.Contains(&quot;Other&quot;))" sap:VirtualizedContainerService.HintSize="521,436" sap2010:WorkflowViewState.IdRef="If_7">
                        <If.Then>
                          <Sequence DisplayName="Select 'Other' Payer" sap:VirtualizedContainerService.HintSize="376,288" sap2010:WorkflowViewState.IdRef="Sequence_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strRefundToValue]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[item.Get("aaname").ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:SelectItem ContinueOnError="{x:Null}" DelayAfter="[in_IntDefaultDelay]" DelayBefore="[in_IntDefaultDelay]" DisplayName="Select Item 'Select Refund To value'" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="SelectItem_2" Item="[strRefundToValue]">
                              <ui:SelectItem.Items>
                                <scg:List x:TypeArguments="x:String" Capacity="8">
                                  <x:String>Contributor - Nissan Motors (GB) Ltd</x:String>
                                  <x:String>Dealer - Nissan London West</x:String>
                                  <x:String>Salesman - Qadafi</x:String>
                                  <x:String>Customer - Sharma</x:String>
                                  <x:String>Contributor - Sharma</x:String>
                                  <x:String>3rd Party - Sharma</x:String>
                                </scg:List>
                              </ui:SelectItem.Items>
                              <ui:SelectItem.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' /&gt;&#xA;&lt;webctrl id='refundTo*' tag='SELECT' /&gt;&#xA;" TimeoutMS="[in_IntDefaultTimeout]">
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SelectItem.Target>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:SelectItem>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <ui:SelectItem ContinueOnError="{x:Null}" DelayAfter="[in_IntDefaultDelay]" DelayBefore="[in_IntDefaultDelay]" DisplayName="Select Item 'Actor Account'" sap:VirtualizedContainerService.HintSize="828,96" sap2010:WorkflowViewState.IdRef="SelectItem_4" Item="[in_StrActorAccount]">
        <ui:SelectItem.Items>
          <scg:List x:TypeArguments="x:String" Capacity="4">
            <x:String>13778851</x:String>
            <x:String>60229725</x:String>
            <x:String>60229725</x:String>
          </scg:List>
        </ui:SelectItem.Items>
        <ui:SelectItem.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' /&gt;&lt;webctrl id='actorAccount*' tag='SELECT' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
            <ui:Target.WaitForReady>
              <InArgument x:TypeArguments="ui:WaitForReady" />
            </ui:Target.WaitForReady>
          </ui:Target>
        </ui:SelectItem.Target>
      </ui:SelectItem>
      <ui:SelectItem ContinueOnError="{x:Null}" DelayAfter="[in_IntDefaultDelay]" DelayBefore="[in_IntDefaultDelay]" DisplayName="Select Item 'Method'" sap:VirtualizedContainerService.HintSize="828,96" sap2010:WorkflowViewState.IdRef="SelectItem_3" Item="[in_StrPaymentMethod]">
        <ui:SelectItem.Items>
          <scg:List x:TypeArguments="x:String" Capacity="4">
            <x:String>Bank transfer</x:String>
            <x:String>Cheque</x:String>
            <x:String>Profits</x:String>
          </scg:List>
        </ui:SelectItem.Items>
        <ui:SelectItem.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' /&gt;&lt;webctrl id='method*' tag='SELECT' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
            <ui:Target.WaitForReady>
              <InArgument x:TypeArguments="ui:WaitForReady" />
            </ui:Target.WaitForReady>
          </ui:Target>
        </ui:SelectItem.Target>
      </ui:SelectItem>
      <ui:SelectItem ContinueOnError="{x:Null}" DelayAfter="[in_IntDefaultDelay]" DelayBefore="[in_IntDefaultDelay]" DisplayName="Select Item 'Select Reason" sap:VirtualizedContainerService.HintSize="828,96" sap2010:WorkflowViewState.IdRef="SelectItem_5" Item="[in_StrRefundReason]">
        <ui:SelectItem.Items>
          <scg:List x:TypeArguments="x:String" Capacity="8">
            <x:String>Settlement overpaid</x:String>
            <x:String>Customer and insurer paid</x:String>
            <x:String>Direct debit for incorrect amount</x:String>
            <x:String>Customer overpaid</x:String>
            <x:String>Other</x:String>
          </scg:List>
        </ui:SelectItem.Items>
        <ui:SelectItem.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' /&gt;&lt;webctrl id='reason*' tag='SELECT' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
            <ui:Target.WaitForReady>
              <InArgument x:TypeArguments="ui:WaitForReady" />
            </ui:Target.WaitForReady>
          </ui:Target>
        </ui:SelectItem.Target>
      </ui:SelectItem>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Post-condition Check" DisplayName="Post-Condition Check" sap:VirtualizedContainerService.HintSize="870,570" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="boolPostConditionCheck" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'Overpaid Value'" sap:VirtualizedContainerService.HintSize="579,68" sap2010:WorkflowViewState.IdRef="GetValue_2">
        <ui:GetValue.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' /&gt;&lt;webctrl id='overpaid*' tag='INPUT' /&gt;" TimeoutMS="[in_IntDefaultTimeout]">
            <ui:Target.WaitForReady>
              <InArgument x:TypeArguments="ui:WaitForReady" />
            </ui:Target.WaitForReady>
          </ui:Target>
        </ui:GetValue.Target>
        <ui:GetValue.Value>
          <OutArgument x:TypeArguments="x:String">[strOverpaidValue]</OutArgument>
        </ui:GetValue.Value>
      </ui:GetValue>
      <Assign sap:VirtualizedContainerService.HintSize="579,60" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strOverpaidValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[strOverpaidValue.Trim.Substring(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[double.Parse(strOverpaidValue) &gt; 0]" DisplayName="If (double.Parse(strOverpaidValue) &gt; 0)" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_4">
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[&quot;Post Condition Check Successful. Overpaid Amount Value Is Greater Than 0.00&quot;]" />
        </If.Then>
        <If.Else>
          <Throw DisplayName="Throw BE" Exception="[New BusinessRuleException(&quot;Post Condition Check Failed. Overpaid Amount Is Less Than Or Equal To 0.00&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Checking All Outgoing Arguments" DisplayName="Outgoing Argument Check" sap:VirtualizedContainerService.HintSize="870,125" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="870,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[String.Format(&quot;Ended Component: {0}&quot;, strComponentName)]" />
  </Sequence>
</Activity>